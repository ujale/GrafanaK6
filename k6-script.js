// Auto-generated by the postman-to-k6 converter

import "./libs/shim/core.js";
import "./libs/shim/expect.js";
import "./libs/shim/urijs.js";
import { htmlReport } from "https://raw.githubusercontent.com/benc-uk/k6-reporter/main/dist/bundle.js";

export let options = { maxRedirects: 4,
  duration: '1m',
  vus: 250,
   };

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  environment: {
    server: "https://qa-api.upkip.live",
    csadmintoken:
      "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjoiMjllYWRjM2EtOThmMC00MDhlLWI4ZGQtMjg4NmYzZjQxZmQyIiwiaWF0IjoxNjY2NzEzNTk5LCJleHAiOjE2OTgyNDk1OTl9.SnVjIdY1ikITKCLq8Irk4lz6Tnp1FoPwxiRmDOVI490",
    csadminId: "29eadc3a-98f0-408e-b8dd-2886f3f41fd2"
  }
});

export default function() {
  postman[Request]({
    name: "Admin Login Copy",
    id: "641272d2-1073-4064-bff6-e61b10d8945d",
    method: "POST",
    address: "{{server}}/v1/admin/login",
    data: '{\n    "secret":"123456"\n}',
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      //Set access token as environment variable
      var body = JSON.parse(responseBody);
      pm.environment.set("csadmintoken", body.data.token);

      pm.test("Login successful", function() {
        pm.expect(body.message).to.eql("Operation Successful");
      });

      //Set person id as environment variable
      var body = JSON.parse(responseBody);
      pm.environment.set("csadminId", body.data.id);

      pm.test("Response time is less than 1500ms", function() {
        pm.expect(pm.response.responseTime).to.be.below(1500);
      });
    }
  });

  postman[Request]({
    name: "Get Users Copy",
    id: "77227089-837f-44fb-8438-a9509af57af6",
    method: "GET",
    address: "{{server}}/v1/admin/users",
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      var body = JSON.parse(responseBody);
      pm.test("Login successful", function() {
        pm.expect(body.message).to.eql("Operation Successful");
      });

      pm.test("Response time is less than 1500ms", function() {
        pm.expect(pm.response.responseTime).to.be.below(1500);
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var]("csadmintoken")}`;
    }
  });

  postman[Request]({
    name: "Get Verified Users Copy",
    id: "9e232ef0-2702-441e-848d-b5dec5763dff",
    method: "GET",
    address: "{{server}}/v1/admin/users?verified=true&page=0",
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      var body = JSON.parse(responseBody);
      pm.test("Login successful", function() {
        pm.expect(body.message).to.eql("Operation Successful");
      });

      pm.test("Response time is less than 1500ms", function() {
        pm.expect(pm.response.responseTime).to.be.below(1500);
      });

      //pm.test("verifiedusercount", function () {
      //    pm.expect(body.data.total).to.eql(159);
      //});
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var]("csadmintoken")}`;
    }
  });

  postman[Request]({
    name: "Get Unverified Users Copy",
    id: "e17dcebb-0d0e-43f3-9e62-67797ed9813b",
    method: "GET",
    address: "{{server}}/v1/admin/users?verified=false&page=0",
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      var body = JSON.parse(responseBody);
      pm.test("Login successful", function() {
        pm.expect(body.message).to.eql("Operation Successful");
      });

      pm.test("Response time is less than 1500ms", function() {
        pm.expect(pm.response.responseTime).to.be.below(1500);
      });

      pm.test("unverifiedusercount", function() {
        pm.expect(body.data.total).to.eql(5);
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var]("csadmintoken")}`;
    }
  });
}
export function handleSummary(data) {
  return {
    "summary.html": htmlReport(data),
  };
}
